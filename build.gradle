plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.TMT'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Eureka Client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//MySql
	runtimeOnly 'com.mysql:mysql-connector-j'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	//Test Implementation
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//Query Dsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//Model Mapper
	implementation 'org.modelmapper:modelmapper:3.1.0'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//kafka
	implementation 'org.springframework.kafka:spring-kafka'

	//spring batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	testImplementation 'org.springframework.batch:spring-batch-test'


	//mongodb
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	//feign client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
}

tasks.named('test') {
	useJUnitPlatform()
}
